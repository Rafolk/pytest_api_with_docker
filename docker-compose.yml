version: '3'

services:
  allure:
    image: frankescobar/allure-docker-service
    environment:
      CHECK_RESULTS_EVERY_SECONDS: 1
      KEEP_HISTORY: 1
    ports:
      - "5050:5050"
    volumes:
      - ${PWD}/allure-results:/app/allure-results
      - ${PWD}/allure-reports:/app/default-reports

  allure-ui:
    image: frankescobar/allure-docker-service-ui
    environment:
      ALLURE_DOCKER_PUBLIC_API_URL: "http://localhost:5050"
      ALLURE_DOCKER_PUBLIC_API_URL_PREFIX: ""
    ports:
      - "5252:5252"

  test-api:
    image: rafolk/training_api:latest
    ports:
      - "3001:3001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3001/ping" ]
      interval: 5s
      timeout: 3s
      retries: 3

  autotest-container:
    build: .
    network_mode: host
    volumes:
      - ./allure-results:/usr/tests/allure-results
    depends_on:
        test-api:
          condition: service_healthy
        postgres-db:
          condition: service_healthy

  postgres-db:
    image: postgres:14.7-alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
    ports:
    - "6432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "postgres" ]
      interval: 5s
      timeout: 3s
      retries: 3

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4:7
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@admin.com
      PGADMIN_DEFAULT_PASSWORD: mysecretpassword
    ports:
      - "5550:80"
    restart: always